stages:
  - build
  - test
  - code-analysis
  - docker-build
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  # GIT_STRATEGY: clone
  # DOCKER_HOST: tcp://localhost:2375
  # DOCKER_TLS_CERTDIR: ""
      
build:
  stage: build
  image: maven:3.8.4-openjdk-17-slim
  script:
    - mvn clean package -DskipTests
  tags:
    - k8s-runner

test:
  stage: test
  image: maven:3.8.4-openjdk-17-slim
  script:
    - mvn test
  tags:
    - k8s-runner

# sonarqube_master_job:
#   stage: code-analysis
#   image: maven:3.8.4-openjdk-17-slim
#   script:
#     - mvn --batch-mode verify sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD
#   tags:
#     - docker

docker_build:
  stage: docker-build
  # image: docker:24.0.5
  # services:
  #   - docker:24.0.5-dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER  registry.gitlab.com --password-stdin
    - docker build -t registry.gitlab.com/smr1234/sample-web .
    - docker push registry.gitlab.com/smr1234/sample-web
    - docker images 
  tags:
    - k8s-runner

# deploy:
#   stage: deploy
#   image: bitnami/kubectl:latest
#   script:
#     # - kubectl config use-context root/k8s-connect:k8s-connect
#     - kubectl get svc
#     - kubectl version
#     - echo "$CI_PROJECT_DIR"
#     - kubectl apply -f $CI_PROJECT_DIR/kube/.
#     - kubectl get pods
#   tags:
#     - k8s-runner    
    